/*
 * SettingsView.java
 *
 * Copyright (c) 2011 Tad Hardesty
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
package com.platymuus.mcurl;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import org.jdesktop.application.Action;
import org.jdesktop.application.FrameView;
import java.io.IOException;
import java.net.URI;

/**
 * The application's main frame.
 */
public final class SettingsView extends FrameView {
    
    private McUrlApp app;

    public SettingsView(McUrlApp app) {
        super(app);
        this.app = app;
        
        initComponents();
        getFrame().setResizable(false);
        getFrame().pack();
        
        autofillCheck.setSelected(McUrlApp.properties.getProperty("autofill", "on").equalsIgnoreCase("on"));
        noconfirmCheck.setSelected(McUrlApp.properties.getProperty("noconfirm", "off").equalsIgnoreCase("on"));
        overrideCheck.setSelected(McUrlApp.properties.getProperty("override", "off").equalsIgnoreCase("on"));
        disableCheck();
    }
    
    @Action
    public void disableCheck() {
        if (!autofillCheck.isSelected()) noconfirmCheck.setSelected(false);
        noconfirmCheck.setEnabled(autofillCheck.isSelected());
    }

    @Action
    public void save() {
        McUrlApp.properties.setProperty("spout", spoutCheck.isSelected() ? "on" : "off");
        McUrlApp.properties.setProperty("autofill", autofillCheck.isSelected() ? "on" : "off");
        McUrlApp.properties.setProperty("noconfirm", noconfirmCheck.isSelected() ? "on" : "off");
        McUrlApp.properties.setProperty("override", overrideCheck.isSelected() ? "on" : "off");
        try {
            McUrlApp.properties.store(new FileOutputStream(new File(McUrlApp.toplevelFile, "mcurl.properties")), "McURL settings file");
            Runtime.getRuntime().exit(0);
        } catch (IOException ex) {
            app.show(new ErrorView(app, ex));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        aboutLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        autofillCheck = new javax.swing.JCheckBox();
        overrideCheck = new javax.swing.JCheckBox();
        noconfirmCheck = new javax.swing.JCheckBox();
        spoutCheck = new javax.swing.JCheckBox();
        spoutLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();

        mainPanel.setMaximumSize(new java.awt.Dimension(272, 145));
        mainPanel.setMinimumSize(new java.awt.Dimension(272, 145));
        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.platymuus.mcurl.McUrlApp.class).getContext().getResourceMap(SettingsView.class);
        titleLabel.setFont(resourceMap.getFont("titleLabel.font")); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText(resourceMap.getString("titleLabel.text")); // NOI18N
        titleLabel.setName("titleLabel"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.platymuus.mcurl.McUrlApp.class).getContext().getActionMap(SettingsView.class, this);
        saveButton.setAction(actionMap.get("save")); // NOI18N
        saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
        saveButton.setName("saveButton"); // NOI18N

        aboutLabel.setFont(resourceMap.getFont("aboutLabel.font")); // NOI18N
        aboutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aboutLabel.setText(resourceMap.getString("aboutLabel.text")); // NOI18N
        aboutLabel.setToolTipText(resourceMap.getString("aboutLabel.toolTipText")); // NOI18N
        aboutLabel.setName("aboutLabel"); // NOI18N

        cancelButton.setAction(actionMap.get("quit")); // NOI18N
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N

        autofillCheck.setAction(actionMap.get("disableCheck")); // NOI18N
        autofillCheck.setSelected(true);
        autofillCheck.setText(resourceMap.getString("autofillCheck.text")); // NOI18N
        autofillCheck.setName("autofillCheck"); // NOI18N

        overrideCheck.setText(resourceMap.getString("overrideCheck.text")); // NOI18N
        overrideCheck.setName("overrideCheck"); // NOI18N

        noconfirmCheck.setText(resourceMap.getString("noconfirmCheck.text")); // NOI18N
        noconfirmCheck.setName("noconfirmCheck"); // NOI18N

        spoutCheck.setText(resourceMap.getString("spoutCheck.text")); // NOI18N
        spoutCheck.setName("spoutCheck"); // NOI18N

        spoutLabel.setForeground(resourceMap.getColor("spoutLabel.foreground")); // NOI18N
        spoutLabel.setText(resourceMap.getString("spoutLabel.text")); // NOI18N
        spoutLabel.setToolTipText(resourceMap.getString("spoutLabel.toolTipText")); // NOI18N
        spoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spoutLabel.setName("spoutLabel"); // NOI18N
        spoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spoutLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(spoutCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spoutLabel))
                    .addComponent(overrideCheck, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(autofillCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(noconfirmCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
                    .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(aboutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spoutCheck)
                    .addComponent(spoutLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autofillCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noconfirmCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(overrideCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aboutLabel)
                .addContainerGap())
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextPane1.setName("jTextPane1"); // NOI18N
        jScrollPane1.setViewportView(jTextPane1);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        setComponent(mainPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void spoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spoutLabelMouseClicked
        try {
            Desktop.getDesktop().browse(URI.create("http://spout.in/about"));
        }
        catch (IOException ex) {
            app.show(new ErrorView(app, ex));
        }
    }//GEN-LAST:event_spoutLabelMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboutLabel;
    private javax.swing.JCheckBox autofillCheck;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JCheckBox noconfirmCheck;
    private javax.swing.JCheckBox overrideCheck;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox spoutCheck;
    private javax.swing.JLabel spoutLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
